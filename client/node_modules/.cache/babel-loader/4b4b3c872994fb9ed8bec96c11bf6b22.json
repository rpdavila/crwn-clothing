{"ast":null,"code":"var _jsxFileName = \"/home/rafael/ReactProjects/crwn-clothing/src/pages/collection/collection.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { firestore } from '../../firebase/firebase.utils';\nimport './collection.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollectionPage = _ref => {\n  _s();\n\n  let {\n    collection\n  } = _ref;\n  useEffect(() => {\n    console.log('I am subscribing');\n    const unsubscribeFromCollections = firestore.collection('colelctions').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log('I am unsubscribing');\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const {\n    title,\n    items\n  } = collection;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(CollectionItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CollectionPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CollectionPage;\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"sources":["/home/rafael/ReactProjects/crwn-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","firestore","CollectionPage","collection","console","log","unsubscribeFromCollections","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAO,0BAAP;;;AAEA,MAAMC,cAAc,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACvCN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,0BAA0B,GAAGL,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCI,UAApC,CAA+CC,QAAQ,IAAIJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,CAA3D,CAAnC;AAEA,WAAO,MAAM;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAC,MAAAA,0BAA0B;AAC7B,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;AAUA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,UAAzB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBM;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAI,QAAC,cAAD;AAA8B,QAAA,IAAI,EAAEA;AAApC,SAAqBA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,cAAlB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApBD;;GAAMX,c;;KAAAA,c;;AAsBN,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1Cb,EAAAA,UAAU,EAAEH,gBAAgB,CAACgB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { firestore } from '../../firebase/firebase.utils';\nimport './collection.styles.scss'\n\nconst CollectionPage = ({ collection }) => {\n    useEffect(() => {\n        console.log('I am subscribing');\n        const unsubscribeFromCollections = firestore.collection('colelctions').onSnapshot(snapshot => console.log(snapshot));\n\n        return () => {\n            console.log('I am unsubscribing')\n            unsubscribeFromCollections();\n        }\n    }, []);\n    \n    const { title, items } = collection;\n    return (\n        <div className='collection-page'>\n            <h2 className='title'>{title}</h2>\n            <div className='items'>\n                {items.map(item => <CollectionItem key={item.id} item={item} />)}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}