{"ast":null,"code":"import shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const featchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    try {\n      const collectionRef = firestore.collection('collections');\n      dispatch(fetchCollectionsStart());\n      collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      });\n    } catch (error) {\n      dispatch(featchCollectionsFailure(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/home/rafael/ReactProjects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","featchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","onSnapshot","snapshot","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAMP,OAAO,MAAMG,wBAAwB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,QAAI;AACA,YAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,MAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,MAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,cAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAJ,QAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACP,OAHG;AAIH,KAPD,CAOE,OAAOY,KAAP,EAAc;AACZL,MAAAA,QAAQ,CAACJ,wBAAwB,CAACS,KAAK,CAACC,OAAP,CAAzB,CAAR;AACH;AAEJ,GAZD;AAaH,CAdM","sourcesContent":["import shopActionTypes from \"./shop.types\";\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n\n})\n\nexport const featchCollectionsFailure = errorMessage => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n\n})\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        try {\n            const collectionRef = firestore.collection('collections');\n            dispatch(fetchCollectionsStart());\n            collectionRef.onSnapshot(async snapshot => {\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);      \n                dispatch(fetchCollectionsSuccess(collectionsMap));\n        });\n        } catch (error) {\n            dispatch(featchCollectionsFailure(error.message));\n        }\n        \n    }    \n}"]},"metadata":{},"sourceType":"module"}