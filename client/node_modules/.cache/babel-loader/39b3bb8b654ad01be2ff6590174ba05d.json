{"ast":null,"code":"var _jsxFileName = \"/home/rafael/ReactProjects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      const {\n        updateCollections\n      } = this.props;\n      updateCollections(collectionsMap);\n      this.setState({\n        'loading': false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/rafael/ReactProjects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","props","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAIrCC,uBAJqC,GAIX,IAJW;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACA,YAAM;AAAEb,QAAAA;AAAF,UAAwB,KAAKe,KAAnC;AACAf,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AAAC,mBAAW;AAAZ,OAAd;AACD,KALD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAFrB;AAGC,QAAA,MAAM,EAAEJ,KAAK,iBACX,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAER,OAA3C;AAAA,aAAwDQ;AAAxD;AAAA;AAAA;AAAA;AAAA;AAJH;AAAA;AAAA;AAAA;AAAA,cADH,eAQG,QAAC,KAAD;AACC,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADrB;AAEC,QAAA,MAAM,EAAEJ,KAAK,iBACX,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAER,OAAtC;AAAA,aAAmDQ;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA,cARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AArCoC;;AAsCtC;;AAED,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIO,QAAQ,CAACrB,iBAAiB,CAACc,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAGA,eAAenB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {  \n  state = {\n    loading: true\n  }\n  unsubscribeFromSnapshot = null;\n  \n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    \n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      const { updateCollections } = this.props\n      updateCollections(collectionsMap);\n      this.setState({'loading': false});\n    });\n  }\n  \n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return(\n      <div className='shop-page'>\n         <Route \n          exact \n          path={`${match.path}`} \n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n            )}              \n          />\n         <Route \n          path={`${match.path}/:collectionId`} \n          render={props => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n            )}\n          />\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}