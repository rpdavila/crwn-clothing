{"ast":null,"code":"var _jsxFileName = \"/home/rafael/ReactProjects/crwn-clothing/src/components/sign-in/sign-in.componont.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { useDispatch } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //redux sagas handler    \n\n    dispatch(emailSignInStart({\n      email,\n      password\n    }));\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: () => dispatch(googleSignInStart()),\n          isGoogleSignIn: true,\n          children: \" Sign in with Google \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"VlYhCgWykvdqXrQty+XJFJcxiWk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/rafael/ReactProjects/crwn-clothing/src/components/sign-in/sign-in.componont.jsx"],"names":["React","useState","CustomButton","FormInput","useDispatch","googleSignInStart","emailSignInStart","SignIn","userCredentials","setUserCredentials","email","password","dispatch","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AAEA,OAAO,uBAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC;AACnDS,IAAAA,KAAK,EAAE,EAD4C;AAEnDC,IAAAA,QAAQ,EAAE;AAFyC,GAAD,CAAtD;AAKA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMK,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAEjC;;AACDH,IAAAA,QAAQ,CAACN,gBAAgB,CAAC;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,CAAjB,CAAR;AACH,GAJD;;AAMA,QAAMK,YAAY,GAAIF,KAAD,IAAW;AAC5B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AACAV,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACU,IAAD,GAAQD;AAA7B,KAAD,CAAlB;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,YAAY,EAAEM,YAJlB;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEL,QAHX;AAII,QAAA,YAAY,EAAEK,YAJlB;AAKI,QAAA,KAAK,EAAC,UALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACP,iBAAiB,EAAlB,CAAnD;AAA0E,UAAA,cAAc,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CApDD;;GAAME,M;UAMeH,W;;;KANfG,M;;AAsDN,MAAMa,kBAAkB,GAAER,QAAQ,KAAK;AACnCP,EAAAA,iBAAiB,EAAE,MAAMO,QAAQ,CAACP,iBAAiB,EAAlB,CADE;AAEnCC,EAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KAAqBC,QAAQ,CAACN,gBAAgB,CAAC;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFZ,CAAL,CAAlC;;AAIA,eAAeJ,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { useDispatch } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nconst SignIn = () => {\n    const [userCredentials, setUserCredentials] = useState({\n        email: '',\n        password: ''\n    });\n\n    const dispatch = useDispatch();\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n         //redux sagas handler    \n        dispatch(emailSignInStart({email, password}));\n    }\n\n    const handleChange = (event) => {\n        const { value, name } = event.target;\n        setUserCredentials({...userCredentials, [name]: value })\n    };\n\n    \n    return (\n        <div className='sign-in'>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput \n                    name='email' \n                    type='email' \n                    value={email}\n                    handleChange={handleChange} \n                    label='email'\n                    required \n                />                    \n                <FormInput \n                    name='password' \n                    type='password' \n                    value={password}\n                    handleChange={handleChange}\n                    label='password' \n                    required \n                />                 \n                <div className='buttons'>\n                    <CustomButton type='submit'> Sign In </CustomButton>\n                    <CustomButton type='button' onClick={() => dispatch(googleSignInStart())} isGoogleSignIn> Sign in with Google </CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n    \n}\n\nconst mapDispatchToProps= dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}